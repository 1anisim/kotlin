package

public fun main(/*0*/ a: A): kotlin.Unit

@org.jspecify.annotations.DefaultNotNull public open class A {
    public constructor A()
    public final var defaultField: kotlin.String
    @org.jspecify.annotations.Nullable public final var field: @org.jspecify.annotations.Nullable kotlin.String?
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open fun everythingNotNullable(/*0*/ x: kotlin.String): kotlin.String
    @org.jspecify.annotations.DefaultNullable public open fun everythingNullable(/*0*/ x: kotlin.String?): @org.jspecify.annotations.DefaultNullable kotlin.String?
    @org.jspecify.annotations.DefaultNullnessUnknown public open fun everythingUnknown(/*0*/ x: kotlin.String!): @org.jspecify.annotations.DefaultNullnessUnknown kotlin.String!
    public open fun explicitlyNullnessUnknown(/*0*/ @org.jspecify.annotations.NullnessUnknown x: @org.jspecify.annotations.NullnessUnknown kotlin.String!): kotlin.String
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    @org.jspecify.annotations.DefaultNullable public open fun mixed(/*0*/ @org.jspecify.annotations.NotNull x: @org.jspecify.annotations.NotNull kotlin.String): @org.jspecify.annotations.DefaultNullable kotlin.String?
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}
